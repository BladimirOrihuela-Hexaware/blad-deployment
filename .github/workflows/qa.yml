name: Deploy to QA env

on:
  pull_request:
  push:
    branches-ignore:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

#Sets environment var CI to false to prevent error from warnings
env:
  CI: false

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Validate-Dev-Changes:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: "16"

  #     - name: Install Dependencies
  #       run: npm install

  #     - name: Test Lint
  #       run: npm run lint

  #     - name: Test coverage
  #       run: npm run test

  # QA-deploy:
  #   needs: Validate-Dev-Changes
  #   environment:
  #     name: QA
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: "16"

  #     - name: Install Dependencies
  #       run: npm install

  #     - name: Run test
  #       run: npm run test

  #     - name: Set Homepage
  #       run: npm run setHomepage

  #     - name: Build
  #       run: CI=false npm run build

  #     - name: deploy to QA env --> Netlify
  #       run: netlify deploy --prod --auth ${{ secrets.NETLIFY_TOKEN }} --site ${{ secrets.SITE_ID }}

  PR-Management:
    # needs: QA-deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Use action
        id: get-branch
        uses: ypicard/get-branch-name-github-action@v1

      - name: Set env
        id: set-branch-name
        run: echo "My_Branch=$(echo ${{ steps.get-branch.outputs.branch }} | sed 's/^[^\/]\+\///')" >> $GITHUB_OUTPUT

      - name: get env name
        run: echo $My_Branch

      - name: pull-request
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: "main" # If blank, default: master
          pr_title: "Pulling ${{ steps.get-branch.outputs.branch }} into main" # Title of pull request
          pr_body: ":crown: *An automated PR*" # Full markdown support, requires pr_title to be set
          pr_label: "auto-pr" # Comma-separated list (no spaces)
          pr_draft: true # Creates pull request as draft
          pr_allow_empty: true # Creates pull request even if there are no changes
          github_token: ${{ secrets.GITHUB_TOKEN }}
